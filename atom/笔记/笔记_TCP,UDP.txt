UDP / TCP 网络编程

UDP：
1,IP地址，在网络中标记一台电脑，不能够重复。
2,ipv4的：C类前面的3段是网络号，后面的1段是主机号（常），B类是前两段网络号，A类是前一段是网络号。
3,socket(suo kei te)（套接字）
4,创建套接字，  socket(AF_INET,SOCK_STREAM)  AF_INET---IPV4 ,AF_INET6---IPV6
                  SOCK_STREAM--->TCP   SOCK_DGRAM--->UDP
5,socket.sendto(（内容信息包括编码方式），（IP地址（字符的形式），端口号（数字）) ---> 发送内容
6,socket.recvfrom(接收内容大小) --->接收内容，  输出接受的内容 和地址
7,socket.bind('IP地址',端口号) --->绑定ip到套接字

TCP
创建套接字-->连接服务器-->发送请求-->关闭套接字
8,连接：  socket_name.connect(('tcp_ip',tcp_port))
  接收：  socket_name.recv()
  如果发送缓冲区可用大小为0或比要发送的数据长度要小，则会阻塞，直到发送缓冲区里的数据被系统发送后，
  可用缓冲区大小比要发送的数据长度大时，send返回成功，否则一直阻塞等待
          在接收的时候会解堵塞，会有两种原因，1是客户端关闭（长度为0），2是收到信息
9,发送：  socket_name.send(信息及编码) / socket_name.sendall(信息及编码)

tcp服务器
创建套接字-->绑定本地信息（本机ip和端口）--->将默认的套接字转为被动--->等到客户端连接--->
接收客户端请求--->回复客户端--->关闭套接字
10, 将套接字由主动转为被动，等待接收来自客户端的请求 ----> socket_name.listen(128)
11, 返回客户端的套接字和ip及端口 socket_name.accept()--->返回一个元组（新的来自客户端的套接字，客户端的地址）
      accept 会卡住服务器，等待一个客户端的连接
12，关闭时先关闭来自客户端的套接字，
